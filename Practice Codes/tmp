# -----------------------------------
# 1Ô∏è‚É£ Provider Configuration
# -----------------------------------
#provider "google" {
#  project = "your-gcp-project-id" # üîπ Replace with your project ID
#  region  = "asia-south1"
#  zone    = "asia-south1-a"
#}

# -----------------------------------
# 2Ô∏è‚É£ Create a Custom VPC Network
# -----------------------------------
resource "google_compute_network" "custom_vpc" {
  name                    = "custom-vpc"
  auto_create_subnetworks = false
}

# -----------------------------------
# 3Ô∏è‚É£ Create a Subnetwork (depends on VPC)
# -----------------------------------
resource "google_compute_subnetwork" "custom_subnet" {
  name          = "custom-subnet"
  ip_cidr_range = "10.10.0.0/24"
  region        = "asia-south1"
  network       = google_compute_network.custom_vpc.id

  depends_on = [
    google_compute_network.custom_vpc # ‚úÖ Ensure VPC is created first
  ]
}

# -----------------------------------
# 4Ô∏è‚É£ Create a Firewall Rule (depends on Subnet & VPC)
# -----------------------------------
resource "google_compute_firewall" "allow_ssh" {
  name    = "allow-ssh"
  network = google_compute_network.custom_vpc.name

  allow {
    protocol = "tcp"
    ports    = ["22"]
  }

  source_ranges = ["0.0.0.0/0"]

  depends_on = [
    google_compute_subnetwork.custom_subnet # ‚úÖ Subnet must exist before firewall
  ]
}

# -----------------------------------
# 5Ô∏è‚É£ Create a Compute Engine VM (depends on all above)
# -----------------------------------
resource "google_compute_instance" "vm_instance" {
  name         = "vm-sandeep-1"
  machine_type = "e2-micro"
  zone         = "asia-south1-a"

  boot_disk {
    initialize_params {
      image = "ubuntu-os-cloud/ubuntu-2204-lts"
    }
  }

  network_interface {
    subnetwork = google_compute_subnetwork.custom_subnet.id
    access_config {} # External IP
  }



  tags = ["ssh-enabled"]

  depends_on = [
    google_compute_firewall.allow_ssh,      # ‚úÖ Wait for firewall
    google_compute_subnetwork.custom_subnet # ‚úÖ Wait for subnet
  ]
}
